{"version":3,"sources":["../../source/helpers/extractNationalNumberFromPossiblyIncompleteNumber.test.js"],"names":["Metadata","metadata","extractNationalNumberFromPossiblyIncompleteNumber","describe","it","meta","country","should","deep","equal","nationalPrefix","undefined","carrierCode","nationalNumber"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,iDAAP,MAA8D,qDAA9D;AAEAC,QAAQ,CAAC,mDAAD,EAAsD,YAAM;AACnEC,EAAAA,EAAE,CAAC,6EAAD,EAAgF,YAAM;AACvF,QAAMC,IAAI,GAAG,IAAIL,QAAJ,CAAaC,QAAb,CAAb;AACAI,IAAAA,IAAI,CAACC,OAAL,CAAa,IAAb;AACAJ,IAAAA,iDAAiD,CAAC,aAAD,EAAgBG,IAAhB,CAAjD,CAAuEE,MAAvE,CAA8EC,IAA9E,CAAmFC,KAAnF,CAAyF;AACxFC,MAAAA,cAAc,EAAEC,SADwE;AAExFC,MAAAA,WAAW,EAAE,MAF2E;AAGxFC,MAAAA,cAAc,EAAE;AAHwE,KAAzF;AAKA,GARC,CAAF;AASA,CAVO,CAAR","sourcesContent":["import Metadata from '../metadata'\r\nimport metadata from '../../metadata.min.json'\r\nimport extractNationalNumberFromPossiblyIncompleteNumber from './extractNationalNumberFromPossiblyIncompleteNumber'\r\n\r\ndescribe('extractNationalNumberFromPossiblyIncompleteNumber', () => {\r\n\tit('should parse a carrier code when there is no national prefix transform rule', () => {\r\n\t\tconst meta = new Metadata(metadata)\r\n\t\tmeta.country('AU')\r\n\t\textractNationalNumberFromPossiblyIncompleteNumber('18311800123', meta).should.deep.equal({\r\n\t\t\tnationalPrefix: undefined,\r\n\t\t\tcarrierCode: '1831',\r\n\t\t\tnationalNumber: '1800123'\r\n\t\t})\r\n\t})\r\n})"],"file":"extractNationalNumberFromPossiblyIncompleteNumber.test.js"}