{"version":3,"sources":["../source/searchNumbers.js"],"names":["normalizeArguments","PhoneNumberMatcher","searchNumbers","arguments","text","options","metadata","matcher","Symbol","iterator","next","hasNext","done","value"],"mappings":";;AAAA,SAASA,kBAAT,QAAmC,oBAAnC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA;;;;AAGA,eAAe,SAASC,aAAT,GACf;AAAA,4BACqCF,kBAAkB,CAACG,SAAD,CADvD;AAAA,MACSC,IADT,uBACSA,IADT;AAAA,MACeC,OADf,uBACeA,OADf;AAAA,MACwBC,QADxB,uBACwBA,QADxB;;AAGC,MAAMC,OAAO,GAAG,IAAIN,kBAAJ,CAAuBG,IAAvB,EAA6BC,OAA7B,EAAsCC,QAAtC,CAAhB;AAEA,6BACEE,MAAM,CAACC,QADT,cACqB;AACnB,WAAO;AACHC,MAAAA,IAAI,EAAE,gBAAM;AACX,YAAIH,OAAO,CAACI,OAAR,EAAJ,EAAuB;AACzB,iBAAO;AACNC,YAAAA,IAAI,EAAE,KADA;AAENC,YAAAA,KAAK,EAAEN,OAAO,CAACG,IAAR;AAFD,WAAP;AAIA;;AACD,eAAO;AACNE,UAAAA,IAAI,EAAE;AADA,SAAP;AAGG;AAXE,KAAP;AAaA,GAfF;AAiBA","sourcesContent":["import { normalizeArguments } from './parsePhoneNumber'\r\nimport PhoneNumberMatcher from './PhoneNumberMatcher'\r\n\r\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\r\nexport default function searchNumbers()\r\n{\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\r\n\tconst matcher = new PhoneNumberMatcher(text, options, metadata)\r\n\r\n\treturn  {\r\n\t\t[Symbol.iterator]() {\r\n\t\t\treturn {\r\n\t    \t\tnext: () => {\r\n\t    \t\t\tif (matcher.hasNext()) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdone: false,\r\n\t\t\t\t\t\t\tvalue: matcher.next()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tdone: true\r\n\t\t\t\t\t}\r\n\t    \t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"],"file":"searchNumbers.js"}