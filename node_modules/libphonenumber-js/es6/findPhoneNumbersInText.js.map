{"version":3,"sources":["../source/findPhoneNumbersInText.js"],"names":["findNumbers","findPhoneNumbersInText","text","defaultCountry","options","metadata","args","getArguments","is_object","undefined","v2","_"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,sBAAT,CAAgCC,IAAhC,EAAsCC,cAAtC,EAAsDC,OAAtD,EAA+DC,QAA/D,EAAyE;AACvF,MAAMC,IAAI,GAAGC,YAAY,CAACJ,cAAD,EAAiBC,OAAjB,EAA0BC,QAA1B,CAAzB;AACA,SAAOL,WAAW,CAACE,IAAD,EAAOI,IAAI,CAACF,OAAZ,EAAqBE,IAAI,CAACD,QAA1B,CAAlB;AACA;AAED,OAAO,SAASE,YAAT,CAAsBJ,cAAtB,EAAsCC,OAAtC,EAA+CC,QAA/C,EAAyD;AAC/D,MAAIA,QAAJ,EAAc;AACb,QAAIF,cAAJ,EAAoB;AACnBC,MAAAA,OAAO,qBACHA,OADG;AAEND,QAAAA,cAAc,EAAdA;AAFM,QAAP;AAIA;AACD,GAPD,MAOO;AACN,QAAIC,OAAJ,EAAa;AACZC,MAAAA,QAAQ,GAAGD,OAAX;;AACA,UAAID,cAAJ,EAAoB;AACnB,YAAIK,SAAS,CAACL,cAAD,CAAb,EAA+B;AAC9BC,UAAAA,OAAO,GAAGD,cAAV;AACA,SAFD,MAEO;AACNC,UAAAA,OAAO,GAAG;AAAED,YAAAA,cAAc,EAAdA;AAAF,WAAV;AACA;AACD,OAND,MAMO;AACNC,QAAAA,OAAO,GAAGK,SAAV;AACA;AACD,KAXD,MAWO;AACNJ,MAAAA,QAAQ,GAAGF,cAAX;AACAC,MAAAA,OAAO,GAAGK,SAAV;AACA;AACD;;AACD,SAAO;AACNL,IAAAA,OAAO,oBACHA,OADG;AAENM,MAAAA,EAAE,EAAE;AAFE,MADD;AAKNL,IAAAA,QAAQ,EAARA;AALM,GAAP;AAOA,C,CAED;AACA;;AACA;;AACA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAAAG,CAAC;AAAA,SAAI,QAAOA,CAAP,MAAa,QAAjB;AAAA,CAAnB","sourcesContent":["import findNumbers from './findNumbers'\r\n\r\nexport default function findPhoneNumbersInText(text, defaultCountry, options, metadata) {\r\n\tconst args = getArguments(defaultCountry, options, metadata)\r\n\treturn findNumbers(text, args.options, args.metadata)\r\n}\r\n\r\nexport function getArguments(defaultCountry, options, metadata) {\r\n\tif (metadata) {\r\n\t\tif (defaultCountry) {\r\n\t\t\toptions = {\r\n\t\t\t\t...options,\r\n\t\t\t\tdefaultCountry\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tif (options) {\r\n\t\t\tmetadata = options\r\n\t\t\tif (defaultCountry) {\r\n\t\t\t\tif (is_object(defaultCountry)) {\r\n\t\t\t\t\toptions = defaultCountry\r\n\t\t\t\t} else {\r\n\t\t\t\t\toptions = { defaultCountry }\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\toptions = undefined\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tmetadata = defaultCountry\r\n\t\t\toptions = undefined\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\toptions: {\r\n\t\t\t...options,\r\n\t\t\tv2: true\r\n\t\t},\r\n\t\tmetadata\r\n\t}\r\n}\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst is_object = _ => typeof _ === 'object'"],"file":"findPhoneNumbersInText.js"}